// <auto-generated />
using System;
using EntityFrameworkCore.Jet.Metadata;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhraseFinder.Data;

#nullable disable

namespace PhraseFinder.Data.Migrations
{
    [DbContext(typeof(PhraseFinderDbContext))]
    partial class PhraseFinderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PhraseFinder.Domain.Models.Phrase", b =>
                {
                    b.Property<int>("PhraseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_Locucion")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseWord")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Palabra_base");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Categorias");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Patron");

                    b.Property<int>("PhraseDictionaryId")
                        .HasColumnType("integer")
                        .HasColumnName("ID_Diccionario");

                    b.Property<bool>("Reviewed")
                        .HasColumnType("smallint")
                        .HasColumnName("Revisado");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Locucion");

                    b.Property<string>("Variant")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Variante");

                    b.HasKey("PhraseId");

                    b.HasIndex("Pattern")
                        .IsUnique();

                    b.HasIndex("PhraseDictionaryId");

                    b.ToTable("Locuciones_y_expresiones");
                });

            modelBuilder.Entity("PhraseFinder.Domain.Models.PhraseDefinition", b =>
                {
                    b.Property<int>("PhraseDefinitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_Definicion")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("longchar")
                        .HasColumnName("Definicion");

                    b.Property<int>("PhraseId")
                        .HasColumnType("integer")
                        .HasColumnName("ID_Locucion");

                    b.HasKey("PhraseDefinitionId");

                    b.HasIndex("PhraseId");

                    b.ToTable("Definiciones");
                });

            modelBuilder.Entity("PhraseFinder.Domain.Models.PhraseDictionary", b =>
                {
                    b.Property<int>("PhraseDictionaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_Diccionario")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_creacion")
                        .HasDefaultValueSql("Now()");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("longchar")
                        .HasColumnName("Descripcion");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(32767)
                        .HasColumnType("longchar")
                        .HasColumnName("Ruta_fichero");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("longchar")
                        .HasColumnName("Formato");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Nombre");

                    b.HasKey("PhraseDictionaryId");

                    b.ToTable("Diccionarios");
                });

            modelBuilder.Entity("PhraseFinder.Domain.Models.PhraseExample", b =>
                {
                    b.Property<int>("PhraseExampleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_Ejemplo")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Example")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("longchar")
                        .HasColumnName("Ejemplo");

                    b.Property<int>("PhraseDefinitionId")
                        .HasColumnType("integer")
                        .HasColumnName("ID_Definicion");

                    b.HasKey("PhraseExampleId");

                    b.HasIndex("PhraseDefinitionId");

                    b.ToTable("Ejemplos");
                });

            modelBuilder.Entity("PhraseFinder.Domain.Models.Phrase", b =>
                {
                    b.HasOne("PhraseFinder.Domain.Models.PhraseDictionary", "PhraseDictionary")
                        .WithMany("Phrases")
                        .HasForeignKey("PhraseDictionaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhraseDictionary");
                });

            modelBuilder.Entity("PhraseFinder.Domain.Models.PhraseDefinition", b =>
                {
                    b.HasOne("PhraseFinder.Domain.Models.Phrase", null)
                        .WithMany("Definitions")
                        .HasForeignKey("PhraseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PhraseFinder.Domain.Models.PhraseExample", b =>
                {
                    b.HasOne("PhraseFinder.Domain.Models.PhraseDefinition", null)
                        .WithMany("Examples")
                        .HasForeignKey("PhraseDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PhraseFinder.Domain.Models.Phrase", b =>
                {
                    b.Navigation("Definitions");
                });

            modelBuilder.Entity("PhraseFinder.Domain.Models.PhraseDefinition", b =>
                {
                    b.Navigation("Examples");
                });

            modelBuilder.Entity("PhraseFinder.Domain.Models.PhraseDictionary", b =>
                {
                    b.Navigation("Phrases");
                });
#pragma warning restore 612, 618
        }
    }
}
